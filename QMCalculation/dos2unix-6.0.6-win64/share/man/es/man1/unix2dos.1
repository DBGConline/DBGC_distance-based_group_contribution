.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2014-08-03" "dos2unix" "2014-08-03"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOMBRE"
.IX Header "NOMBRE"
dos2unix \- Convertidor de ficheros de texto de formato DOS/Mac a Unix y
viceversa
.SH "SINOPSIS"
.IX Header "SINOPSIS"
.Vb 2
\&    dos2unix [parámetros] [FICHERO ...] [\-n FICHERO_DE_ENTRADA FICHERO_DE_SALIDA ...]
\&    unix2dos [parámetros] [FICHERO ...] [\-n FICHERO_DE_ENTRADA FICHERO_DE_SALIDA ...]
.Ve
.SH "DESCRIPCIÓN"
.IX Header "DESCRIPCIÓN"
El paquete Dos2unix incluye las utilerías \f(CW\*(C`dos2unix\*(C'\fR y \f(CW\*(C`unix2dos\*(C'\fR para
convertir ficheros de texto plano en formato \s-1DOS\s0 o Mac a formato Unix y
viceversa.
.PP
En ficheros de texto DOS/Windows, un salto de línea, también conocido como
nueva línea, es una combinación de dos caracteres: un retorno de carro (\s-1CR\s0)
seguido por un salto de línea (\s-1LF\s0). En ficheros de texto Unix, un salto de
línea es solamente un carácter: el salto de línea (\s-1LF\s0). En ficheros de texto
Mac, antes de Mac \s-1OS X,\s0 un salto de línea era sólo un carácter retorno de
carro (\s-1CR\s0). Actualmente, Mac \s-1OS\s0 usa el estilo Unix de saltos de línea (\s-1LF\s0).
.PP
Además de saltos de línea, Dos2unix puede también convertir la codificación
de ficheros. Unas cuantas páginas de códigos \s-1DOS\s0 pueden ser convertidas a
Unix Latin\-1. Y ficheros Unicode de Windows (\s-1UTF\-16\s0) pueden ser convertidos
a ficheros Unicode de Unix (\s-1UTF\-8\s0).
.PP
Los ficheros binarios son ignorados automáticamente, a menos que se fuerce
su conversión.
.PP
Los ficheros no regulares, tales como directorios y \s-1FIFO,\s0 son ignorados
automáticamente.
.PP
Los enlaces simbólicos y sus destinos no son modificados por defecto. Los
enlaces simbólicos pueden opcionalmente ser reemplazados, o la salida puede
ser escrita al destino simbólico del enlace. En Windows no está soportada la
escritura a enlaces simbólicos.
.PP
Dos2unix fue modelado después de dos2unix bajo SunOS/Solaris. Hay una
importante diferencia respecto a la versión original SunOS/Solaris. Esta
versión hace, por defecto, la conversión en el mismo fichero (modo de
fichero antiguo), mientras que la versión original de SunOS/Solaris sólo es
compatible con la conversión en fichero emparejado (modo de fichero
nuevo). Véanse las opciones \f(CW\*(C`\-o\*(C'\fR y \f(CW\*(C`\-n\*(C'\fR.
.SH "PARÁMETROS"
.IX Header "PARÁMETROS"
.IP "\fB\-\-\fR" 4
.IX Item "--"
Todos los parámetros siguientes son tratados como nombres de fichero. Use
este parámetro si desea convertir ficheros cuyos nombres inician con un
guión. Por ejemplo para convertir un fichero llamado \*(L"\-foo\*(R", use este
comando:
.Sp
.Vb 1
\&    dos2unix \-\- \-foo
.Ve
.Sp
O en modo de fichero nuevo:
.Sp
.Vb 1
\&    dos2unix \-n \-\- \-foo out.txt
.Ve
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
Sólo convierte los salto de línea. Éste es el modo de conversión por
defecto.
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
Conversión entre el conjunto de caracteres \s-1DOS\s0 e \s-1ISO\-8859\-1.\s0 Véase también
la sección \s-1MODOS DE\s0 CONVERSIÓN.
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
Usa la página de códigos Windows 1252 (Europa Occidental).
.IP "\fB\-437\fR" 4
.IX Item "-437"
Usa la página de códigos \s-1DOS 437 \s0(\s-1EE. UU.\s0). Está es la página de códigos
usada por defecto para conversión \s-1ISO.\s0
.IP "\fB\-850\fR" 4
.IX Item "-850"
Usa la página de códigos \s-1DOS 850 \s0(Europa Occidental).
.IP "\fB\-860\fR" 4
.IX Item "-860"
Usa la página de códigos \s-1DOS 860 \s0(Portugués).
.IP "\fB\-863\fR" 4
.IX Item "-863"
Usa la página de códigos \s-1DOS 863 \s0(Francocanadiense).
.IP "\fB\-865\fR" 4
.IX Item "-865"
Usa la página de códigos \s-1DOS 865 \s0(Nórdico).
.IP "\fB\-7\fR" 4
.IX Item "-7"
Convierte caracteres de 8 bits al espacio de 7 bits.
.IP "\fB\-b, \-\-keep\-bom\fR" 4
.IX Item "-b, --keep-bom"
Mantiene la Marca de Orden de Byte  (\s-1BOM\s0). Cuando el fichero de entrada
tiene \s-1BOM,\s0 escribe \s-1BOM\s0 en el fichero de salida. Este es el comportamiento
por defecto en la conversión a saltos de línea \s-1DOS.\s0 Vea también la opción
\&\f(CW\*(C`\-r\*(C'\fR.
.IP "\fB\-c, \-\-convmode \s-1CONVMODE\s0\fR" 4
.IX Item "-c, --convmode CONVMODE"
Establece el modo de conversión, Donde \s-1CONVMODE\s0 puede ser: \fIascii\fR,
\&\fI7bit\fR, \fIiso\fR, \fImac\fR siendo ascii el valor por defecto.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
Fuerza la conversión de ficheros binarios.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Despiega la ayuda y termina el programa.
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
Mantiene la fecha del fichero de salida igual a la del fichero de entrada.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
Muestra la licencia del programa.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
Añade salto de línea adicional.
.Sp
\&\fBdos2unix\fR: Sólo los saltos de línea \s-1DOS\s0 son cambiados por dos saltos de
línea Unix. En modo Mac sólo los saltos de línea Mac son cambiados por dos
saltos de línea Unix.
.Sp
\&\fBunix2dos\fR: Sólo los saltos de línea Unix son cambiados por dos saltos de
línea \s-1DOS.\s0 En modo Mac los saltos de línea Unix son cambiados por dos saltos
de línea Mac.
.IP "\fB\-m, \-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
Escribe una marca de orden de bytes para \s-1UTF\-8\s0 en el fichero de
salida. Nunca use esta opción cuando la codificación de salida sea distinta
de \s-1UTF\-8.\s0 Véase también la sección \s-1UNICODE.\s0
.IP "\fB\-n, \-\-newfile \s-1FICHERO_DE_ENTRADA FICHERO_DE_SALIDA ...\s0\fR" 4
.IX Item "-n, --newfile FICHERO_DE_ENTRADA FICHERO_DE_SALIDA ..."
Modo de fichero nuevo. Convierte el fichero \s-1FICHERO_DE_ENTRADA\s0 y escribe la
salida al fichero \s-1FICHERO_DE_SALIDA.\s0 Los nombres de fichero deben ser dados
en pares y los comodines \fIno\fR deben ser usados o \fIperderá\fR sus ficheros.
.Sp
La persona que inicia la conversión en el modo de fichero nuevo (pareado)
será el propietario del fichero convertido.  Los permisos de
lectura/escritura del fichero nuevo serán los permisos del fichero original
menos la \fIumask\fR\|(1) de la persona que ejecute la conversión.
.IP "\fB\-o, \-\-oldfile \s-1FICHERO ...\s0\fR" 4
.IX Item "-o, --oldfile FICHERO ..."
Modo de fichero viejo. Convierte el fichero \s-1FICHERO\s0 y lo sobrescribe con la
salida. El programa por defecto se ejecuta en este modo. Sí se pueden
emplear comodines.
.Sp
En modo de fichero antiguo (in situ), el fichero convertido obtiene el mismo
propietario, grupo, y permisos de lectura/escritura que el fichero
original.  Lo mismo aplica cuando el fichero es convertido por otro usuario
quien tiene permiso de lectura en el fichero (p.e. usuario root).  La
conversión será abortada cuando no sea posible preservar los valores
originales.  Cambiar el propietario implicaría que el propietario original
ya no podrá leer el fichero. Cambiar el grupo podría ser un riesgo de
seguridad, ya que el fichero podría ser accesible a personas inadecuadas.
La preservación del propietario, grupo, y permisos de lectura/escritura sólo
está soportada bajo Unix.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Modo silencioso. Suprime todas las advertencias y mensajes. El valor
retornado es cero. Excepto cuando se emplean parámetros incorrectos.
.IP "\fB\-r, \-\-remove\-bom\fR" 4
.IX Item "-r, --remove-bom"
Elimina la Marca de Orden de Byte (\s-1BOM\s0). No escribe el \s-1BOM\s0 en el fichero de
salida. Este es el comportamiento por defecto al convertir a saltos de línea
Unix. Vea también la opción \f(CW\*(C`\-b\*(C'\fR.
.IP "\fB\-s, \-\-safe\fR" 4
.IX Item "-s, --safe"
Ignora los ficheros binarios (por defecto).
.IP "\fB\-ul, \-\-assume\-utf16le\fR" 4
.IX Item "-ul, --assume-utf16le"
Supone que el formato de fichero de entrada es \s-1UTF\-16LE.\s0
.Sp
Cuando existe una marca de orden de bytes (\s-1BOM\s0) en el fichero de entrada, la
\&\s-1BOM\s0 tiene prioridad sobre esta opción.
.Sp
Cuando se hace un supuesto incorrecto (el fichero de entrada no estaba en
formato \s-1UTF\-16LE\s0) y la conversión tiene éxito, obtendrá un fichero \s-1UTF\-8\s0 de
salida con el texto erróneo. La conversión errónea puede ser deshecha con
\&\fIiconv\fR\|(1) mediante convertir el fichero \s-1UTF\-8\s0 de salida de vuelta a
\&\s-1UTF\-16LE.\s0 Esto restaurará el fichero original.
.Sp
El supuesto de \s-1UTF\-16LE\s0 funciona como un \fImodo de conversión\fR. Al cambiar
al modo por defecto \fIascii\fR el supuesto \s-1UTF\-16LE\s0 es deshabilitado.
.IP "\fB\-ub, \-\-assume\-utf16be\fR" 4
.IX Item "-ub, --assume-utf16be"
Supone que el formato del fichero de entrada es \s-1UTF\-16BE.\s0
.Sp
Esta opción funciona igual que la opción \f(CW\*(C`\-ul\*(C'\fR.
.IP "\fB\-F, \-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
Sigue los enlaces simbólicos y convierte los destinos.
.IP "\fB\-R, \-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
Reemplaza los enlaces simbólicos con los ficheros convertidos (los ficheros
destino originales no se alteran).
.IP "\fB\-S, \-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
No altera los enlaces simbólicos ni sus destinos (por defecto).
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Despiega la información de la versión y termina el programa.
.SH "MODO MAC"
.IX Header "MODO MAC"
En modo normal los saltos de línea son convertidos de \s-1DOS\s0 a Unix y
viceversa. Los saltos de línea Mac no son convertidos.
.PP
En modo Mac los saltos de línea son convertidos de Mac a Unix y
viceversa. Los saltos de línea \s-1DOS\s0 no son modificados.
.PP
Para ejecutar en modo Mac use el modificador \f(CW\*(C`\-c mac\*(C'\fR o use los comandos
\&\f(CW\*(C`mac2unix\*(C'\fR o \f(CW\*(C`unix2mac\*(C'\fR.
.SH "MODOS DE CONVERSIÓN"
.IX Header "MODOS DE CONVERSIÓN"
.IP "\fBascii\fR" 4
.IX Item "ascii"
En modo \f(CW\*(C`ascii\*(C'\fR sólo los saltos de línea son convertidos. Éste es el modo
de conversión por defecto.
.Sp
Aunque el nombre de este modo es \s-1ASCII,\s0 el cual es un estándar de 7 bits,
éste emplea 8 bits. Siempre use este modo cuando convierta ficheros en
Unicode \s-1UTF\-8.\s0
.IP "\fB7bit\fR" 4
.IX Item "7bit"
En este modo todos los caracteres no \s-1ASCII\s0 de 8 bits (con valores de 128 a
255) son convertidos al espacio de 7 bits.
.IP "\fBiso\fR" 4
.IX Item "iso"
Los caracteres son convertidos entre un conjunto de caracteres \s-1DOS \s0(página
de códigos) y el conjunto de caracteres \s-1ISO\-8859\-1 \s0(Latín\-1) de Unix. Los
caracteres \s-1DOS\s0 sin equivalente \s-1ISO\-8859\-1,\s0 para los cuales la conversión es
imposible, son convertidos en un punto. Lo mismo se aplica para caracteres
\&\s-1ISO\-8859\-1\s0 sin contraparte \s-1DOS.\s0
.Sp
Cuando sólo se emplea el parámetro \f(CW\*(C`\-iso\*(C'\fR, dos2unix intentará determinar la
página de códigos activa. Cuando esto no sea posible, dos2unix utilizará la
página de códigos 437 por defecto, la cual es empleada principalmente en
\&\s-1EE. UU.\s0 Para forzar una página de códigos específica emplee los parámetros
\&\f(CW\*(C`\-437\*(C'\fR (\s-1EE. UU.\s0), \f(CW\*(C`\-850\*(C'\fR (Europa Occidental), \f(CW\*(C`\-860\*(C'\fR (Portugués), \f(CW\*(C`\-863\*(C'\fR
(Francocanadiense), o \f(CW\*(C`\-865\*(C'\fR (Nórdico). La página de códigos Windows 1252
(Europa Occidental) también está soportada con el parámetro \f(CW\*(C`\-1252\*(C'\fR. Para
acceder a otras páginas de códigos use dos2unix en combinación con
\&\fIiconv\fR\|(1). Iconv puede convertir entre una larga lista de codificaciones de
caracteres.
.Sp
No use nunca la conversión \s-1ISO\s0 en ficheros de texto Unicode. Esto
corrompería los ficheros codificados como \s-1UTF\-8.\s0
.Sp
Algunos ejemplos:
.Sp
Convierte de la página de códigos por defecto de \s-1DOS\s0 a Latín\-1 de Unix.
.Sp
.Vb 1
\&    dos2unix \-iso \-n in.txt out.txt
.Ve
.Sp
Convierte de \s-1DOS 850\s0 a Unix Latín\-1.
.Sp
.Vb 1
\&    dos2unix \-850 \-n in.txt out.txt
.Ve
.Sp
Convierte de Windows 1252 a Unix Latín\-1.
.Sp
.Vb 1
\&    dos2unix \-1252 \-n in.txt out.txt
.Ve
.Sp
Convierte de Windows 1252 a Unix \s-1UTF\-8 \s0(Unicode).
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 in.txt | dos2unix > out.txt
.Ve
.Sp
Convierte de Latín\-1 en Unix a la página de códigos por defecto de \s-1DOS.\s0
.Sp
.Vb 1
\&    unix2dos \-iso \-n in.txt out.txt
.Ve
.Sp
Convierte de Unix Latín\-1 a \s-1DOS 850.\s0
.Sp
.Vb 1
\&    unix2dos \-850 \-n in.txt out.txt
.Ve
.Sp
Convierte de Unix Latín\-1 a Windows 1252.
.Sp
.Vb 1
\&    unix2dos \-1252 \-n in.txt out.txt
.Ve
.Sp
Convierte de Unix \s-1UTF\-8 \s0(Unicode) a Windows 1252.
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t CP1252 > out.txt
.Ve
.Sp
Véase también <http://czyborra.com/charsets/codepages.html> y
<http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.SS "Codificaciones"
.IX Subsection "Codificaciones"
Existen diferentes codificaciones Unicode. En Unix y Linux los ficheros
Unicode son codificados comúnmente como \s-1UTF\-8.\s0 En Windows los ficheros de
texto Unicode pueden estar codificados en \s-1UTF\-8, UTF\-16,\s0 o \s-1UTF\-16\s0 big
endian, pero con más frecuencia son codificados en formato \s-1UTF\-16.\s0
.SS "Conversion"
.IX Subsection "Conversion"
Los ficheros de texto Unicode pueden tener saltos de línea \s-1DOS,\s0 Unix o Mac,
como cualquier fichero de texto.
.PP
Todas las versiones de dos2unix y unix2dos pueden convertir ficheros
codificados como \s-1UTF\-8,\s0 debido a que \s-1UTF\-8\s0 fue diseñado para
retro-compatibilidad con \s-1ASCII.\s0
.PP
Dos2unix y unix2dos con soporte Unicode \s-1UTF\-16,\s0 pueden leer ficheros de
texto codificados como \s-1UTF\-16\s0 little y big endian. Para ver si dos2unix fue
compilado con soporte \s-1UTF\-16\s0 escriba \f(CW\*(C`dos2unix \-V\*(C'\fR.
.PP
Las versiones Windows de dos2unix y unix2dos siempre convierten ficheros
Codificados como \s-1UTF\-16\s0 a \s-1UTF\-8.\s0 Las versiones Unix de dos2unix/unix2dos
convierten ficheros \s-1UTF\-16\s0 a la codificación de caracteres local cuando es
configurado a \s-1UTF\-8.\s0 Emplee el comando \fIlocale\fR\|(1) para determinar cual es la
codificación de caracteres local.
.PP
Dado que los ficheros de texto formateados \s-1UTF\-8\s0 son bien soportados tanto
en Windows como en Unix, dos2unix y unix2dos no tienen opción para escribir
ficheros \s-1UTF\-16.\s0 Todos los caracteres \s-1UTF\-16\s0 pueden ser codificados en
\&\s-1UTF\-8.\s0 La conversión de \s-1UTF\-16\s0 a \s-1UTF\-8\s0 ocurre sin pérdida. Los ficheros
\&\s-1UTF\-16\s0 serán ignorados en Unix cuando la codificación de caracteres local no
sea \s-1UTF\-8,\s0 para evitar la pérdida accidental de texto. Cuando ocurre un
error de conversión de \s-1UTF\-16\s0 a \s-1UTF\-8,\s0 por ejemplo cuando el fichero de
entrada \s-1UTF\-16\s0 contiene un error, el fichero será ignorado.
.PP
La conversión en modos \s-1ISO\s0 y 7\-bit no funciona en ficheros \s-1UTF\-16.\s0
.SS "Marca de orden de bytes"
.IX Subsection "Marca de orden de bytes"
En Windows los ficheros de texto Unicode típicamente tienen una marca de
orden de bytes (\s-1BOM\s0), debido a que muchos programas de Windows (incluyendo
el Bloc de notas) añaden una \s-1BOM\s0 por defecto. Véase también
<http://es.wikipedia.org/wiki/Marca_de_orden_de_bytes_%28BOM%29>.
.PP
En Unix los ficheros Unicode típicamente no tienen una \s-1BOM.\s0 Se supone que
los ficheros de texto son codificados en la codificación de caracteres
local.
.PP
Dos2unix sólo puede detectar si un fichero está en formato \s-1UTF\-16\s0 si el
fichero tiene una \s-1BOM.\s0 Cuando un fichero \s-1UTF\-16\s0 no tiene una \s-1BOM,\s0 dos2unix
tratará el fichero como un fichero binario.
.PP
Emplee la opción \f(CW\*(C`\-ul\*(C'\fR o \f(CW\*(C`\-ub\*(C'\fR para convertir un fichero \s-1UTF\-16\s0 sin \s-1BOM.\s0
.PP
Dos2Unix, por defecto, no escribe \s-1BOM\s0 en el fichero de salida. Con la opción
\&\f(CW\*(C`\-b\*(C'\fR Dos2unix escribe el \s-1BOM\s0 cuando el fichero de entrada tiene el \s-1BOM.\s0
.PP
Unix2dos escribe \s-1BOM\s0 en el fichero de salida cuando el fichero de entrada
tiene \s-1BOM.\s0 Use la opción \f(CW\*(C`\-r\*(C'\fR para eliminar el \s-1BOM.\s0
.PP
Dos2unix y unix2dos escriben siempre \s-1BOM\s0 cuando se usa la opción \f(CW\*(C`\-m\*(C'\fR.
.SS "Ejemplos Unicode"
.IX Subsection "Ejemplos Unicode"
Convertir de Windows \s-1UTF\-16 \s0(con una \s-1BOM\s0) a Unix \s-1UTF\-8\s0
.PP
.Vb 1
\&    dos2unix \-n in.txt out.txt
.Ve
.PP
Convertir de Windows \s-1UTF\-16LE \s0(sin una \s-1BOM\s0) a Unix \s-1UTF\-8\s0
.PP
.Vb 1
\&    dos2unix \-ul \-n in.txt out.txt
.Ve
.PP
Convertir de Unix \s-1UTF\-8\s0 a Windows \s-1UTF\-8\s0 sin una \s-1BOM\s0
.PP
.Vb 1
\&    unix2dos \-m \-n in.txt out.txt
.Ve
.PP
Convertir de Unix \s-1UTF\-8\s0 a Windows \s-1UTF\-16\s0
.PP
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t UTF\-16 > out.txt
.Ve
.SH "EJEMPLOS"
.IX Header "EJEMPLOS"
Lee la entrada desde 'stdin' y escribe la salida a 'stdout'.
.PP
.Vb 2
\&    dos2unix
\&    dos2unix \-l \-c mac
.Ve
.PP
Convierte y reemplaza a.txt. Convierte y reemplaza b.txt.
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
Convierte y reemplaza a.txt empleando modo de conversión ascii.
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Convierte y reemplaza a.txt empleando modo de conversión ascii. Convierte y
reemplaza b.txt empleando modo de conversión de 7bits.
.PP
.Vb 3
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
\&    dos2unix \-ascii a.txt \-7 b.txt
.Ve
.PP
Convierte a.txt del formato de Mac a Unix.
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Convierte a.txt del formato de Unix a Mac.
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Convierte y reemplaza a.txt manteniendo la fecha del fichero original.
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
Convierte a.txt y escribe la salida a e.txt.
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
Convierte a.txt y escribe la salida a e.txt, manteniendo la fecha de e.txt
igual a la de a.txt.
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
Convierte y reemplaza a.txt. Convierte b.txt y escribe a e.txt.
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
Convierte c.txt y escribe a e.txt. Convierte y reemplaza a.txt. Convierte y
reemplaza b.txt. Convierte d.txt y escribe a f.txt.
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "CONVERSIÓN RECURSIVA"
.IX Header "CONVERSIÓN RECURSIVA"
Emplee dos2unix en combinación con los comandos \fIfind\fR\|(1) y \fIxargs\fR\|(1) para
convertir recursivamente ficheros de texto contenidos en un árbol de
directorios. Por ejemplo para convertir todos los ficheros .txt en el árbol
de directorios debajo del directorio actual escriba:
.PP
.Vb 1
\&    find . \-name *.txt |xargs dos2unix
.Ve
.SH "INTERNACIONALIZACIÓN"
.IX Header "INTERNACIONALIZACIÓN"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
El idioma principal se selecciona con la variable de entorno \s-1LANG.\s0 La
variable \s-1LANG\s0 consiste de varias partes. La primer parte es el código del
idioma en minúsculas. La segunda es opcional y es el código del país en
mayúsculas, precedido por un guión bajo. Existe también una tercera parte
opcional: la codificación de caracteres, precedida por un punto. Unos
cuantos ejemplos para intérpretes de comandos tipo \s-1POSIX\s0 estándar:
.Sp
.Vb 7
\&    export LANG=nl               Neerlandés
\&    export LANG=nl_NL            Neerlandés, Países Bajos
\&    export LANG=nl_BE            Neerlandés, Bélgica
\&    export LANG=es_ES            Español, España
\&    export LANG=es_MX            Español, México
\&    export LANG=en_US.iso88591   Ingles, EE. UU., codificación Latín\-1
\&    export LANG=en_GB.UTF\-8      Ingles, Reino Unido, codificación UTF\-8
.Ve
.Sp
Para una lista completa de códigos de idioma y país véase el manual de
gettext:
<http://www.gnu.org/software/gettext/manual/gettext.html#Language\-Codes>
.Sp
En sistemas Unix puede emplear el comando \fIlocale\fR\|(1) para obtener información
específica del locale.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
Con la variable de entorno \s-1LANGUAGE\s0 puede especificar una lista de prioridad
de los idiomas, separados por dos puntos. Dos2unix da preferencia a \s-1LANGUAGE\s0
por encima de \s-1LANG.\s0 Por ejemplo, primero neerlandés y entonces alemán:
\&\f(CW\*(C`LANGUAGE=nl:de\*(C'\fR. Antes de que pueda usar una lista de prioridad de idiomas
a través de la variable \s-1LANGUAGE,\s0 primero tiene que habilitar la
internacionalización, mediante asignar un valor distinto de \*(L"C\*(R" a \s-1LANG \s0(o
\&\s-1LC_ALL\s0). Véase también el manual de gettext:
<http://www.gnu.org/software/gettext/manual/gettext.html#The\-LANGUAGE\-variable>
.Sp
Si selecciona un idioma que no está disponible el programa funcionará en
ingles.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Con la variable de entorno \s-1DOS2UNIX_LOCALEDIR\s0 el \s-1LOCALEDIR\s0 asignado durante
la compilación puede ser modificado. \s-1LOCALEDIR\s0 es usado para encontrar los
ficheros de idioma. El valor por defecto de \s-1GNU\s0 es
\&\f(CW\*(C`/usr/local/share/locale\*(C'\fR. El parámetro \fB\-\-version\fR desplegará el
\&\s-1LOCALEDIR\s0 en uso.
.Sp
Ejemplo (intérprete de comandos \s-1POSIX\s0):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "VALOR DE RETORNO"
.IX Header "VALOR DE RETORNO"
Se regresa cero cuando el programa termina exitosamente. Cuando ocurre un
error del sistema se regresará el último número de error del sistema. Para
otros errores se regresa 1.
.PP
El valor de retorno es siempre cero en modo silencioso, excepto cuando se
emplean parámetros incorrectos.
.SH "ESTÁNDARES"
.IX Header "ESTÁNDARES"
<http://es.wikipedia.org/wiki/Documento_de_texto>
.PP
<http://es.wikipedia.org/wiki/Retorno_de_carro>
.PP
<http://es.wikipedia.org/wiki/Nueva_l%C3%ADnea>
.PP
<http://es.wikipedia.org/wiki/Unicode>
.SH "AUTORES"
.IX Header "AUTORES"
Benjamin Lin \- <blin@socs.uts.edu.au> Bernd Johannes Wuebben (mac2unix mode)
\&\- <wuebben@kde.org>, Christian Wurll (add extra newline) \-
<wurll@ira.uka.de>, Erwin Waterlander \- <waterlan@xs4all.nl> (Maintainer)
.PP
Página del proyecto: <http://waterlan.home.xs4all.nl/dos2unix.html>
.PP
Página de SourceForge: <http://sourceforge.net/projects/dos2unix/>
.PP
Freecode: <http://freecode.com/projects/dos2unix>
.SH "VÉASE TAMBIÉN"
.IX Header "VÉASE TAMBIÉN"
\&\fIfile\fR\|(1)  \fIfind\fR\|(1)  \fIiconv\fR\|(1)  \fIlocale\fR\|(1)  \fIxargs\fR\|(1)
